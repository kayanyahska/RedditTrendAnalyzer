{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/ClusterChart.js\";\n// src/components/ClusterChart.js\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClusterChart = ({\n  posts,\n  clusters\n}) => {\n  if (!clusters || !posts || clusters.length !== posts.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No clustering data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  const clusterMap = {};\n  clusters.forEach((clusterId, index) => {\n    if (!clusterMap[clusterId]) {\n      clusterMap[clusterId] = [];\n    }\n    clusterMap[clusterId].push(posts[index]);\n  });\n  const clusterData = Object.keys(clusterMap).map(clusterId => ({\n    cluster: `Cluster ${clusterId}`,\n    count: clusterMap[clusterId].length\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Post Distribution by Cluster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      data: clusterData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ClusterChart;\nexport default ClusterChart;\nvar _c;\n$RefreshReg$(_c, \"ClusterChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","ClusterChart","posts","clusters","length","children","fileName","_jsxFileName","lineNumber","columnNumber","clusterMap","forEach","clusterId","index","push","clusterData","Object","keys","map","cluster","count","width","height","data","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/ClusterChart.js"],"sourcesContent":["// src/components/ClusterChart.js\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst ClusterChart = ({ posts, clusters }) => {\n  if (!clusters || !posts || clusters.length !== posts.length) {\n    return <p>No clustering data available.</p>;\n  }\n\n  const clusterMap = {};\n\n  clusters.forEach((clusterId, index) => {\n    if (!clusterMap[clusterId]) {\n      clusterMap[clusterId] = [];\n    }\n    clusterMap[clusterId].push(posts[index]);\n  });\n\n  const clusterData = Object.keys(clusterMap).map((clusterId) => ({\n    cluster: `Cluster ${clusterId}`,\n    count: clusterMap[clusterId].length,\n  }));\n\n  return (\n    <div>\n      <h3>Post Distribution by Cluster</h3>\n      <BarChart width={500} height={300} data={clusterData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"cluster\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n      </BarChart>\n    </div>\n  );\n};\n\nexport default ClusterChart;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC5C,IAAI,CAACA,QAAQ,IAAI,CAACD,KAAK,IAAIC,QAAQ,CAACC,MAAM,KAAKF,KAAK,CAACE,MAAM,EAAE;IAC3D,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7C;EAEA,MAAMC,UAAU,GAAG,CAAC,CAAC;EAErBP,QAAQ,CAACQ,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;IACrC,IAAI,CAACH,UAAU,CAACE,SAAS,CAAC,EAAE;MAC1BF,UAAU,CAACE,SAAS,CAAC,GAAG,EAAE;IAC5B;IACAF,UAAU,CAACE,SAAS,CAAC,CAACE,IAAI,CAACZ,KAAK,CAACW,KAAK,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAME,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACQ,GAAG,CAAEN,SAAS,KAAM;IAC9DO,OAAO,EAAE,WAAWP,SAAS,EAAE;IAC/BQ,KAAK,EAAEV,UAAU,CAACE,SAAS,CAAC,CAACR;EAC/B,CAAC,CAAC,CAAC;EAEH,oBACEJ,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCT,OAAA,CAACR,QAAQ;MAAC6B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACC,IAAI,EAAER,WAAY;MAAAV,QAAA,gBACnDL,OAAA,CAACJ,aAAa;QAAC4B,eAAe,EAAC;MAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCT,OAAA,CAACN,KAAK;QAAC+B,OAAO,EAAC;MAAS;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3BT,OAAA,CAACL,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTT,OAAA,CAACH,OAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXT,OAAA,CAACF,MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVT,OAAA,CAACP,GAAG;QAACgC,OAAO,EAAC,OAAO;QAACC,IAAI,EAAC;MAAS;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACkB,EAAA,GAhCI1B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}