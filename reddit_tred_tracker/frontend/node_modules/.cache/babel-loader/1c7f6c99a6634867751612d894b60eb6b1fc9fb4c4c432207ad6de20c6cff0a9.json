{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/SentimentChart.js\";\nimport React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentChart = ({\n  summary\n}) => {\n  if (!summary || summary.positive === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sentiment data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const data = [{\n    name: 'Positive',\n    value: summary.positive\n  }, {\n    name: 'Neutral',\n    value: summary.neutral\n  }, {\n    name: 'Negative',\n    value: summary.negative\n  }];\n  const COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sentiment Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 300,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 100,\n        fill: \"#8884d8\",\n        label: true,\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = SentimentChart;\nexport default SentimentChart;\nvar _c;\n$RefreshReg$(_c, \"SentimentChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","Tooltip","jsxDEV","_jsxDEV","SentimentChart","summary","positive","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","data","name","value","neutral","negative","COLORS","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/SentimentChart.js"],"sourcesContent":["import React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\n\nconst SentimentChart = ({ summary }) => {\n  if (!summary || summary.positive === undefined) {\n    return <p>No sentiment data available.</p>;\n  }\n\n  const data = [\n    { name: 'Positive', value: summary.positive },\n    { name: 'Neutral', value: summary.neutral },\n    { name: 'Negative', value: summary.negative }\n  ];\n\n  const COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <div>\n      <h3>Sentiment Distribution</h3>\n      <PieChart width={300} height={300}>\n        <Pie\n          data={data}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={100}\n          fill=\"#8884d8\"\n          label\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend />\n      </PieChart>\n    </div>\n  );\n};\n\nexport default SentimentChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,IAAI,CAACA,OAAO,IAAIA,OAAO,CAACC,QAAQ,KAAKC,SAAS,EAAE;IAC9C,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5C;EAEA,MAAMC,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEV,OAAO,CAACC;EAAS,CAAC,EAC7C;IAAEQ,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAEV,OAAO,CAACW;EAAQ,CAAC,EAC3C;IAAEF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEV,OAAO,CAACY;EAAS,CAAC,CAC9C;EAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEhD,oBACEf,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BT,OAAA,CAACN,QAAQ;MAACsB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAZ,QAAA,gBAChCL,OAAA,CAACL,GAAG;QACFe,IAAI,EAAEA,IAAK;QACXQ,OAAO,EAAC,OAAO;QACfC,OAAO,EAAC,MAAM;QACdC,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,WAAW,EAAE,GAAI;QACjBC,IAAI,EAAC,SAAS;QACdC,KAAK;QAAAnB,QAAA,EAEJK,IAAI,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB3B,OAAA,CAACJ,IAAI;UAAuB2B,IAAI,EAAER,MAAM,CAACY,KAAK;QAAE,GAArC,QAAQA,KAAK,EAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNT,OAAA,CAACF,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXT,OAAA,CAACH,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACmB,EAAA,GApCI3B,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}