{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/SentimentChart.js\";\n// src/components/SentimentChart.js\nimport React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentChart = ({\n  summary\n}) => {\n  const data = [{\n    name: 'Positive',\n    value: summary.positive\n  }, {\n    name: 'Neutral',\n    value: summary.neutral\n  }, {\n    name: 'Negative',\n    value: summary.negative\n  }];\n  const COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sentiment Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 300,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 100,\n        fill: \"#8884d8\",\n        label: true,\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = SentimentChart;\nexport default SentimentChart;\nvar _c;\n$RefreshReg$(_c, \"SentimentChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","Tooltip","jsxDEV","_jsxDEV","SentimentChart","summary","data","name","value","positive","neutral","negative","COLORS","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/SentimentChart.js"],"sourcesContent":["// src/components/SentimentChart.js\nimport React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\n\nconst SentimentChart = ({ summary }) => {\n  const data = [\n    { name: 'Positive', value: summary.positive },\n    { name: 'Neutral', value: summary.neutral },\n    { name: 'Negative', value: summary.negative }\n  ];\n\n  const COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <div>\n      <h3>Sentiment Distribution</h3>\n      <PieChart width={300} height={300}>\n        <Pie\n          data={data}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={100}\n          fill=\"#8884d8\"\n          label\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend />\n      </PieChart>\n    </div>\n  );\n};\n\nexport default SentimentChart;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEH,OAAO,CAACI;EAAS,CAAC,EAC7C;IAAEF,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAEH,OAAO,CAACK;EAAQ,CAAC,EAC3C;IAAEH,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEH,OAAO,CAACM;EAAS,CAAC,CAC9C;EAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEhD,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bd,OAAA,CAACN,QAAQ;MAACqB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,gBAChCV,OAAA,CAACL,GAAG;QACFQ,IAAI,EAAEA,IAAK;QACXc,OAAO,EAAC,OAAO;QACfC,OAAO,EAAC,MAAM;QACdC,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,WAAW,EAAE,GAAI;QACjBC,IAAI,EAAC,SAAS;QACdC,KAAK;QAAAb,QAAA,EAEJP,IAAI,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB1B,OAAA,CAACJ,IAAI;UAAuB0B,IAAI,EAAEb,MAAM,CAACiB,KAAK;QAAE,GAArC,QAAQA,KAAK,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNd,OAAA,CAACF,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXd,OAAA,CAACH,MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACa,EAAA,GAhCI1B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}