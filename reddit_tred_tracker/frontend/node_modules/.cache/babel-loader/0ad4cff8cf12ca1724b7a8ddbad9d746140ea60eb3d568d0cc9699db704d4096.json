{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/DownloadButtons.js\";\n// src/components/DownloadButtons.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst downloadCSV = (filename, rows) => {\n  const csvContent = [Object.keys(rows[0]).join(\",\"), ...rows.map(row => Object.values(row).join(\",\"))].join(\"\\n\");\n  const blob = new Blob([csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.setAttribute(\"download\", filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nconst DownloadButtons = ({\n  posts,\n  subredditActivity\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Download Fetched Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), (posts === null || posts === void 0 ? void 0 : posts.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downloadCSV(\"reddit_posts.csv\", posts),\n      children: \"Download Posts CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), (subredditActivity === null || subredditActivity === void 0 ? void 0 : subredditActivity.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downloadCSV(\"subreddit_activity.csv\", subredditActivity),\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Download Subreddit Activity CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = DownloadButtons;\nexport default DownloadButtons;\nvar _c;\n$RefreshReg$(_c, \"DownloadButtons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","downloadCSV","filename","rows","csvContent","Object","keys","join","map","row","values","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","DownloadButtons","posts","subredditActivity","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/ML_Project/reddit_tred_tracker/frontend/src/components/DownloadButtons.js"],"sourcesContent":["// src/components/DownloadButtons.js\nimport React from 'react';\n\nconst downloadCSV = (filename, rows) => {\n  const csvContent = [\n    Object.keys(rows[0]).join(\",\"),\n    ...rows.map(row => Object.values(row).join(\",\"))\n  ].join(\"\\n\");\n\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.setAttribute(\"download\", filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\nconst DownloadButtons = ({ posts, subredditActivity }) => {\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <h4>Download Fetched Data</h4>\n      {posts?.length > 0 && (\n        <button onClick={() => downloadCSV(\"reddit_posts.csv\", posts)}>\n          Download Posts CSV\n        </button>\n      )}\n      {subredditActivity?.length > 0 && (\n        <button onClick={() => downloadCSV(\"subreddit_activity.csv\", subredditActivity)} style={{ marginLeft: '10px' }}>\n          Download Subreddit Activity CSV\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DownloadButtons;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;EACtC,MAAMC,UAAU,GAAG,CACjBC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,EAC9B,GAAGJ,IAAI,CAACK,GAAG,CAACC,GAAG,IAAIJ,MAAM,CAACK,MAAM,CAACD,GAAG,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC,CACjD,CAACA,IAAI,CAAC,IAAI,CAAC;EAEZ,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACR,UAAU,CAAC,EAAE;IAAES,IAAI,EAAE;EAA0B,CAAC,CAAC;EACxE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;EACrCG,IAAI,CAACM,YAAY,CAAC,UAAU,EAAElB,QAAQ,CAAC;EACvCa,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;EAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;EACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;AACjC,CAAC;AAED,MAAMW,eAAe,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAkB,CAAC,KAAK;EACxD,oBACE3B,OAAA;IAAK4B,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChC9B,OAAA;MAAA8B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7B,CAAAR,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,MAAM,IAAG,CAAC,iBAChBnC,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAMnC,WAAW,CAAC,kBAAkB,EAAEyB,KAAK,CAAE;MAAAI,QAAA,EAAC;IAE/D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EACA,CAAAP,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEQ,MAAM,IAAG,CAAC,iBAC5BnC,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAMnC,WAAW,CAAC,wBAAwB,EAAE0B,iBAAiB,CAAE;MAACC,KAAK,EAAE;QAAES,UAAU,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAC;IAEhH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACI,EAAA,GAhBIb,eAAe;AAkBrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}